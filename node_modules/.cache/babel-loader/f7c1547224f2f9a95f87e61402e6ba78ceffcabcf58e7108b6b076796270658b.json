{"ast":null,"code":"var _jsxFileName = \"/Users/allisonnguyen/Desktop/INFO442/INFO442_B4/src/components/addListing.js\";\nimport React, { useState } from 'react';\nimport { getDatabase, ref, set as firebaseSet, onValue, push as firebasePush, remove } from 'firebase/database';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddListing(props) {\n  let isYes = false;\n  const yesHandleClick = event => {\n    isYes = true;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"survey-label\",\n      children: \" Add New Food Listing \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"form\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Before continuing, answer the following questions for eligibilty:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \" Is the food item unopened? \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \" Is the food item's expiration date at least a week in the future from today? \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \" If the food item is non-shelf stable or not a non-perishable, has the food item been properly stored the whole time it was in your possession (frozen or fridgerated foods)? \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), \"If no to any of these question, the food item is not eligible and cannot be listed.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"survey-eligible\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: \"survey-yes\",\n            onClick: () => yesHandleClick()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), \"Yes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), isYes == true ? \"yes\" : \"no\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n_c = AddListing;\nexport { AddListing };\nvar _c;\n$RefreshReg$(_c, \"AddListing\");","map":{"version":3,"names":["React","useState","getDatabase","ref","set","firebaseSet","onValue","push","firebasePush","remove","jsxDEV","_jsxDEV","AddListing","props","isYes","yesHandleClick","event","children","className","fileName","_jsxFileName","lineNumber","columnNumber","id","class","for","type","onClick","_c","$RefreshReg$"],"sources":["/Users/allisonnguyen/Desktop/INFO442/INFO442_B4/src/components/addListing.js"],"sourcesContent":["import React,{ useState } from 'react';\nimport { getDatabase, ref, set as firebaseSet, onValue, push as firebasePush, remove } from 'firebase/database';\n\nfunction AddListing(props) {\n\n    let isYes = false;\n\n    const yesHandleClick = (event) => {\n        isYes = true;\n      }\n\n    return (\n        <div>\n            <h2 className=\"survey-label\"> Add New Food Listing </h2>\n\n            {/* <!-- Create Form --> */}\n            <form id=\"form\">\n        \n                {/* <!-- Details --> */}\n                {/* <div class=\"form-control\">\n                    <label for=\"name\" id=\"label-name\">\n                        Name\n                    </label> */}\n        \n                    {/* <!-- Input Type Text --> */}\n                    {/* <input type=\"text\" id=\"name\"\n                        placeholder=\"Enter your name\" />\n                </div> */}\n        \n                {/* <div class=\"form-control\">\n                    <label for=\"email\" id=\"label-email\">\n                        Email\n                    </label> */}\n        \n                    {/* <!-- Input Type Email--> */}\n                    {/* <input type=\"email\" id=\"email\"\n                        placeholder=\"Enter your email\" />\n                </div>\n        \n                <div class=\"form-control\">\n                    <label for=\"age\" id=\"label-age\">\n                        Age\n                    </label> */}\n        \n                    {/* <!-- Input Type Text --> */}\n                    {/* <input type=\"text\" id=\"age\"\n                        placeholder=\"Enter your age\" />\n                </div>*/}\n        \n                <div class=\"form-control\">\n                    <label>\n                        Before continuing, answer the following questions for eligibilty:\n                        <ul>\n                            <li> Is the food item unopened? </li>\n                            <li> Is the food item's expiration date at least a week in the future from today? </li>\n                            <li> If the food item is non-shelf stable or not a non-perishable, has the food item been properly stored the whole time it was in your possession (frozen or fridgerated foods)? </li>\n                        </ul>\n                        If no to any of these question, the food item is not eligible and cannot be listed.\n                    </label>\n        \n                    {/* <!-- Input Type Radio Button --> */}\n                    <label for=\"survey-eligible\">\n                        <input type=\"radio\" id=\"survey-yes\" onClick={() => yesHandleClick()}/>Yes\n                    </label>\n\n                </div>\n            </form>\n\n            {isYes == true ? (\"yes\") : (\"no\") }\n\n        </div>\n    )\n}\n\nexport {AddListing};"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAQ,OAAO;AACtC,SAASC,WAAW,EAAEC,GAAG,EAAEC,GAAG,IAAIC,WAAW,EAAEC,OAAO,EAAEC,IAAI,IAAIC,YAAY,EAAEC,MAAM,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhH,SAASC,UAAUA,CAACC,KAAK,EAAE;EAEvB,IAAIC,KAAK,GAAG,KAAK;EAEjB,MAAMC,cAAc,GAAIC,KAAK,IAAK;IAC9BF,KAAK,GAAG,IAAI;EACd,CAAC;EAEH,oBACIH,OAAA;IAAAM,QAAA,gBACIN,OAAA;MAAIO,SAAS,EAAC,cAAc;MAAAD,QAAA,EAAC;IAAsB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGxDX,OAAA;MAAMY,EAAE,EAAC,MAAM;MAAAN,QAAA,eAiCXN,OAAA;QAAKa,KAAK,EAAC,cAAc;QAAAP,QAAA,gBACrBN,OAAA;UAAAM,QAAA,GAAO,mEAEH,eAAAN,OAAA;YAAAM,QAAA,gBACIN,OAAA;cAAAM,QAAA,EAAI;YAA4B;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACrCX,OAAA;cAAAM,QAAA,EAAI;YAA8E;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACvFX,OAAA;cAAAM,QAAA,EAAI;YAA8K;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvL,CAAC,uFAET;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAGRX,OAAA;UAAOc,GAAG,EAAC,iBAAiB;UAAAR,QAAA,gBACxBN,OAAA;YAAOe,IAAI,EAAC,OAAO;YAACH,EAAE,EAAC,YAAY;YAACI,OAAO,EAAEA,CAAA,KAAMZ,cAAc,CAAC;UAAE;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,OAC1E;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,EAENR,KAAK,IAAI,IAAI,GAAI,KAAK,GAAK,IAAK;EAAA;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEhC,CAAC;AAEd;AAACM,EAAA,GArEQhB,UAAU;AAuEnB,SAAQA,UAAU;AAAE,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}